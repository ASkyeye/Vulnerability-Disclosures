#include "pch.h"
#include "AvUtils.h"
#include "ProcessUtils.h"
#include <thread>
#include <filesystem>

namespace fs = std::filesystem;

namespace utils::av
{

void CreateTestVirus(_In_ const fs::path &path)
{
    /*
    auto ofs = std::ofstream(path, std::ios::out | std::ios::trunc);
    if (!ofs.is_open())
    {
        throw std::runtime_error("Cannot open test virus file.");
    }

    // EICAR test virus
    ofs << R"_(X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*)_";
    */

    std::string eicarVirus = R"_(X5O!P%@AP[4\PZX54(P^^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*)_";

    utils::process::CreateProcessAndWaitForExit(
        R"(C:\Windows\System32\cmd.exe)",
        std::string("/c echo ") + eicarVirus + " > \"" + path.string() + "\"");
}

void WaitUntilVirusWillBeQuarantined(_In_ const fs::path &virusPath)
{
    while (fs::exists(virusPath))
    {
        using namespace std::chrono_literals;
        std::this_thread::sleep_for(1s);
    }
}

void WaitUntilVirusWillBeRestored(_In_ const fs::path &virusPath)
{
    while (!fs::exists(virusPath))
    {
        using namespace std::chrono_literals;
        std::this_thread::sleep_for(1s);
    }
}

}
